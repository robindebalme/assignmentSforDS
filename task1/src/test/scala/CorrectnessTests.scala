import org.scalatest.FunSuite
import org.apache.log4j.Logger
import org.apache.log4j.Level
import org.apache.spark.sql.SparkSession
import org.scalatest._

class CorrectnessTests extends FunSuite with BeforeAndAfterAll {
    var spark : org.apache.spark.sql.SparkSession = _
    override def beforeAll = {
        Logger.getLogger("org").setLevel(Level.OFF)
        Logger.getLogger("akka").setLevel(Level.OFF)
        spark = SparkSession.builder()
           .master("local[1]")
           .getOrCreate()
        spark.sparkContext.setLogLevel("ERROR")
    }   

    //test 1
    test("Counting Number of Vertices") {
        val graph = spark.sparkContext.parallelize(List((1,2),(2,3),(3,1)))
        assert(FourHops.countVertices(graph) == 3)
    }

    //test 2
    test("Correctness of mmMapper") {
        val ans = FourHops.mmMapper(3, (1, 2))
        val truth = List(((1,0),(1,2)), ((0,2),(0,1)), ((1,1),(1,2)), ((1,2),(0,1)), ((1,2),(1,2)), ((2,2),(0,1)))
        assert(truth.toSet.equals(ans.toSet))
    }
    
    //test 3
    test("Correctness of mmReducer: value > 0") {
        val indexes = (1,3) 
        val iterables = List((1,2), (0,2))
        val truth = (1, 3, 1)
        assert(FourHops.mmReducer(indexes, iterables).equals(truth))
    }

    //test 4
    test("Correctness of mmReducer: value = 0") {
        val indexes = (2,0) 
        val iterables = List((1,0), (0,2))
        val truth = (2, 0, 0)
        assert(FourHops.mmReducer(indexes, iterables).equals(truth))
    }

    //test 5
    test("Correct 4-hop neighbors for a ring of size 4") {
        val datafile = "src/test/resources/cycledirected.csv"
        val graph = FourHops.loadData(spark, datafile)
        val ans = FourHops.matrixMultiply(FourHops.matrixMultiply(graph, 4), 4).collect().toSet
        val truth = Set((0,0),(1,1),(2,2),(3,3))
        assert(truth.equals(ans))
    }

    //test 6
    test("Correct 4-hop neighbors for a graph of size 1000") {
        val datafile = "src/test/resources/random.csv"
        val graph = FourHops.loadData(spark, datafile)
        val ans = FourHops.matrixMultiply(FourHops.matrixMultiply(graph, 1000), 1000).collect().toSet
        val truth = Set(
            (1,308),(1,977),(5,159),(5,721),(6,374),(6,935),(6,974),(9,142),(9,803),(10,584),(12,49),(12,491),(12,700),(12,769),(12,961),(20,528),(20,720),(20,773),(20,843),(24,554),(24,812),(24,873),(29,96),(29,304),(30,584),(33,26),(37,587),(39,491),(42,896),(43,491),(43,557),(43,961),(45,360),(45,555),(45,630),(45,897),(50,64),(53,226),(53,765),(65,660),(68,224),(72,303),(72,386),(75,92),(75,130),(80,278),(80,744),(84,491),(84,557),(84,961),(86,345),(87,197),(87,407),(87,461),(87,782),(89,435),(89,569),(94,490),(95,222),(95,278),(96,92),(96,130),(101,494),(101,771),(102,374),(102,608),(102,658),(102,974),(104,92),(104,130),(105,776),(107,178),(107,357),(107,474),(107,654),(113,456),(113,769),(113,794),(113,994),(114,559),(114,708),(115,885),(120,689),(120,698),(125,426),(131,15),(131,267),(133,135),(133,587),(139,278),(139,660),(139,744),(142,673),(146,617),(146,800),(146,988),(147,582),(149,548),(149,703),(149,959),(150,340),(150,542),(150,944),(156,300),(156,807),(156,885),(158,588),(158,992),(159,149),(159,370),(159,602),(160,159),(160,721),(163,887),(165,849),(172,483),(172,625),(175,345),(175,776),(196,228),(213,191),(213,811),(216,370),(216,602),(216,897),(218,570),(220,435),(220,447),(223,557),(236,308),(236,761),(249,22),(249,40),(249,415),(249,714),(249,751),(252,22),(260,103),(260,557),(260,849),(263,177),(263,430),(265,301),(267,584),(277,197),(277,236),(277,349),(277,407),(278,862),(284,222),(284,278),(286,294),(290,474),(298,178),(298,754),(310,415),(314,339),(314,726),(338,905),(340,396),(341,297),(341,548),(341,987),(349,725),(353,329),(355,329),(357,582),(359,159),(359,721),(359,859),(359,873),(359,932),(360,938),(366,703),(366,959),(378,458),(378,588),(378,992),(381,377),(389,108),(389,130),(389,383),(389,641),(390,226),(393,491),(393,700),(393,961),(394,584),(397,49),(397,769),(401,329),(401,464),(403,26),(405,8),(405,394),(405,596),(405,862),(406,294),(411,224),(416,313),(416,739),(416,823),(416,839),(416,958),(423,706),(424,22),(425,21),(426,434),(426,871),(427,584),(430,228),(430,593),(430,662),(431,96),(431,304),(434,494),(434,771),(437,66),(437,795),(437,837),(438,506),(448,554),(448,812),(448,873),(451,304),(456,177),(456,430),(462,278),(462,744),(464,483),(464,540),(464,625),(464,758),(472,793),(473,329),(490,474),(500,887),(505,336),(508,213),(509,529),(509,836),(515,434),(515,871),(518,51),(518,812),(518,873),(521,823),(521,958),(523,294),(528,329),(530,284),(531,588),(531,992),(535,274),(535,578),(535,608),(535,636),(535,658),(535,713),(536,394),(536,596),(536,862),(537,790),(538,294),(541,905),(551,165),(551,274),(551,578),(551,713),(553,593),(553,662),(555,686),(560,907),(561,303),(567,117),(574,584),(575,213),(575,673),(575,803),(575,804),(577,8),(584,584),(589,141),(589,261),(589,504),(589,516),(591,302),(592,555),(592,737),(592,797),(597,21),(597,495),(597,798),(603,247),(603,956),(617,673),(631,51),(634,374),(634,608),(634,658),(634,974),(638,21),(642,703),(642,959),(645,611),(649,21),(649,329),(652,474),(655,426),(656,182),(656,342),(665,291),(665,954),(668,213),(670,222),(670,278),(675,22),(675,415),(678,308),(678,345),(678,977),(681,400),(681,884),(684,142),(684,481),(685,554),(685,812),(685,873),(687,773),(687,887),(690,400),(690,481),(690,884),(696,64),(697,730),(700,339),(705,22),(705,415),(709,406),(709,525),(709,815),(712,611),(715,285),(715,896),(715,983),(728,703),(728,743),(728,959),(734,142),(736,588),(736,992),(748,887),(752,18),(754,584),(759,415),(761,588),(761,873),(761,932),(761,992),(770,458),(770,588),(770,992),(773,178),(773,754),(774,368),(777,26),(781,51),(781,812),(781,873),(785,18),(786,584),(796,767),(798,855),(799,370),(799,602),(799,897),(801,554),(801,812),(801,873),(804,584),(807,570),(810,422),(810,490),(810,747),(813,154),(814,631),(815,93),(815,327),(815,513),(816,776),(824,141),(824,261),(824,301),(824,504),(824,516),(825,304),(827,10),(827,888),(828,304),(832,782),(841,279),(856,593),(856,662),(857,491),(857,557),(857,961),(859,422),(859,747),(863,584),(864,406),(864,525),(864,815),(866,31),(866,672),(867,400),(867,884),(868,490),(874,776),(876,767),(878,613),(878,952),(879,458),(879,584),(879,588),(879,834),(879,992),(880,27),(880,406),(880,525),(880,815),(882,236),(882,737),(883,234),(883,377),(884,584),(895,415),(896,584),(896,906),(897,87),(897,742),(900,765),(909,22),(909,415),(910,117),(915,32),(915,478),(915,568),(915,571),(915,939),(916,247),(916,956),(920,21),(922,300),(922,807),(922,885),(927,294),(929,44),(929,630),(947,294),(949,21),(949,495),(949,798),(951,625),(952,167),(952,902),(952,929),(954,374),(954,935),(954,974),(958,584),(958,834),(962,370),(962,602),(962,897),(963,540),(963,557),(963,758),(970,750),(973,454),(973,554),(973,812),(973,873),(977,328),(977,592),(978,197),(978,236),(978,349),(978,407),(984,400),(984,884),(995,18),(995,370),(995,602),(995,897)
        )
        assert(truth.equals(ans))
    }

    //test 7
    test("Correct 4-hop neighbors for a graph of size 1000 (0)") {
        val datafile = "src/test/resources/random0.csv"
        val graph = FourHops.loadData(spark, datafile)
        val ans = FourHops.matrixMultiply(FourHops.matrixMultiply(graph, 1000), 1000).collect().toSet
        val truth = Set(
            (1,83),(3,440),(5,525),(5,607),(5,909),(5,910),(5,980),(9,229),(9,254),(9,551),(9,653),(9,765),(11,31),(13,453),(13,754),(14,384),(14,448),(14,486),(14,621),(14,631),(17,731),(24,735),(25,108),(26,437),(26,490),(26,551),(26,627),(26,653),(27,203),(27,740),(27,818),(35,246),(35,677),(46,705),(53,601),(54,229),(54,254),(54,551),(54,626),(54,653),(54,765),(55,283),(58,108),(60,263),(61,556),(65,519),(65,666),(66,229),(66,254),(66,551),(66,653),(66,765),(68,213),(68,687),(70,724),(72,809),(74,908),(77,256),(77,827),(79,433),(80,263),(83,437),(83,490),(83,551),(83,627),(83,653),(85,105),(85,761),(85,910),(85,951),(88,38),(88,216),(88,300),(88,640),(88,739),(90,128),(90,181),(90,610),(91,13),(93,35),(93,46),(93,185),(93,208),(93,768),(93,807),(96,185),(96,514),(96,809),(97,607),(97,910),(105,439),(105,934),(109,220),(109,593),(115,24),(115,372),(115,380),(115,417),(115,515),(115,627),(122,551),(122,653),(126,461),(126,717),(130,213),(130,687),(132,143),(133,171),(133,742),(135,38),(135,384),(135,448),(135,486),(135,540),(135,621),(135,669),(135,783),(146,46),(148,601),(148,658),(150,740),(150,903),(151,628),(158,206),(161,29),(162,591),(162,788),(162,853),(166,30),(166,448),(166,516),(171,453),(171,754),(173,50),(173,178),(173,563),(176,37),(176,185),(176,213),(176,353),(176,797),(176,834),(178,131),(178,291),(178,819),(181,598),(182,519),(182,666),(187,801),(189,177),(189,246),(189,380),(189,454),(189,555),(189,649),(191,172),(195,61),(195,110),(202,519),(202,666),(203,598),(206,573),(213,46),(213,230),(213,335),(213,543),(214,331),(214,731),(216,765),(216,774),(217,353),(217,596),(217,679),(217,929),(224,24),(224,72),(224,372),(224,380),(224,417),(224,515),(224,527),(224,591),(224,604),(224,627),(224,886),(224,941),(224,951),(224,953),(227,591),(234,809),(236,711),(238,573),(239,652),(240,908),(251,809),(252,24),(252,372),(252,380),(252,417),(252,515),(252,627),(257,147),(257,384),(257,448),(257,486),(257,568),(257,621),(267,555),(268,29),(277,142),(281,336),(282,740),(285,705),(286,300),(286,551),(286,653),(286,723),(286,739),(286,989),(290,967),(291,591),(295,723),(295,989),(300,856),(306,142),(306,740),(306,903),(320,723),(320,765),(320,774),(320,989),(330,533),(330,561),(341,724),(346,855),(352,150),(355,591),(356,591),(359,339),(359,563),(359,995),(364,461),(364,717),(369,661),(377,481),(377,683),(377,837),(379,723),(379,989),(380,147),(380,218),(380,405),(380,636),(388,229),(388,254),(388,556),(388,765),(389,626),(393,273),(393,573),(395,29),(395,33),(395,811),(396,171),(396,742),(398,172),(402,459),(405,323),(405,606),(407,461),(408,150),(410,954),(411,740),(412,525),(412,607),(412,909),(412,910),(412,980),(413,753),(416,33),(416,353),(416,380),(416,596),(416,649),(416,679),(416,929),(420,686),(423,256),(423,607),(423,827),(427,131),(427,286),(427,565),(427,734),(429,98),(429,218),(429,636),(429,830),(429,886),(431,525),(431,591),(431,607),(431,908),(431,909),(431,910),(431,980),(431,984),(437,30),(437,448),(437,516),(438,296),(438,455),(438,803),(443,310),(443,821),(445,950),(448,908),(453,128),(453,203),(453,419),(453,529),(453,806),(453,818),(453,929),(460,217),(460,493),(461,461),(462,369),(469,569),(469,887),(476,855),(480,331),(480,731),(483,153),(483,821),(484,172),(494,273),(494,573),(499,269),(499,290),(499,723),(499,826),(499,989),(506,13),(507,626),(507,642),(508,108),(520,870),(524,627),(534,38),(534,380),(534,583),(534,768),(537,598),(537,992),(540,525),(540,607),(540,909),(540,910),(540,980),(540,984),(543,38),(543,380),(543,583),(543,768),(554,626),(555,331),(555,731),(557,283),(562,206),(566,33),(566,83),(577,269),(579,827),(581,212),(581,392),(581,786),(584,128),(585,461),(585,800),(585,973),(587,216),(587,640),(589,310),(589,821),(591,259),(596,310),(596,821),(597,61),(597,110),(597,185),(597,514),(597,809),(599,627),(599,837),(599,855),(600,740),(601,601),(620,369),(620,418),(620,686),(621,131),(621,286),(621,565),(621,734),(622,384),(622,448),(622,486),(622,621),(622,631),(624,853),(638,353),(638,596),(638,679),(638,929),(641,827),(653,481),(653,683),(653,837),(655,601),(661,512),(662,35),(662,208),(662,807),(666,9),(666,277),(666,348),(668,556),(677,122),(677,189),(677,693),(690,443),(690,827),(695,525),(695,607),(695,909),(695,910),(695,980),(695,984),(702,555),(706,142),(710,263),(711,281),(711,574),(711,818),(718,147),(718,568),(719,46),(732,29),(735,46),(737,369),(737,418),(740,459),(742,996),(743,455),(745,46),(752,569),(752,723),(752,887),(752,989),(753,556),(757,731),(758,591),(766,38),(766,246),(766,677),(766,998),(768,876),(770,216),(770,640),(772,273),(772,573),(774,54),(774,367),(774,411),(774,762),(774,859),(776,20),(776,340),(778,217),(778,417),(778,493),(778,502),(778,627),(781,711),(788,185),(788,458),(788,683),(788,708),(788,837),(788,942),(788,953),(797,384),(797,448),(797,486),(797,540),(797,621),(808,177),(808,361),(809,104),(809,416),(809,641),(809,870),(815,443),(815,827),(818,740),(819,30),(819,383),(828,850),(828,957),(830,269),(830,290),(830,740),(830,826),(832,30),(832,162),(832,383),(832,478),(833,105),(833,951),(834,485),(842,461),(842,556),(842,717),(843,46),(844,239),(844,939),(844,984),(849,551),(849,653),(854,456),(854,594),(854,765),(855,177),(855,246),(855,380),(855,454),(855,555),(855,649),(860,269),(865,61),(865,110),(868,273),(868,573),(869,908),(875,573),(879,13),(881,18),(881,34),(881,461),(882,269),(886,996),(888,105),(888,951),(903,607),(903,910),(904,765),(908,433),(910,661),(914,874),(919,908),(924,799),(924,933),(929,131),(929,819),(932,273),(932,573),(933,573),(934,20),(934,177),(934,246),(934,380),(934,454),(934,649),(936,105),(936,951),(938,108),(939,996),(942,131),(942,819),(943,555),(944,58),(944,177),(944,361),(944,686),(944,912),(945,601),(946,18),(946,34),(946,320),(946,913),(947,908),(948,519),(948,666),(950,3),(950,353),(950,679),(950,929),(953,58),(953,177),(953,361),(953,686),(953,912),(954,950),(955,18),(955,430),(955,619),(957,273),(957,573),(961,874),(964,601),(965,310),(965,821),(971,811),(972,3),(972,691),(972,744),(977,512),(980,98),(980,218),(980,636),(980,830),(980,886),(984,213),(984,353),(984,591),(984,788),(984,797),(984,853),(987,54),(988,53),(993,24),(993,372),(993,380),(993,417),(993,515),(993,627),(995,203),(995,818)
        )
        assert(truth.equals(ans))
    }

    //test 8
    test("Correct 4-hop neighbors for a graph of size 1000 (1)") {
        val datafile = "src/test/resources/random1.csv"
        val graph = FourHops.loadData(spark, datafile)
        val ans = FourHops.matrixMultiply(FourHops.matrixMultiply(graph, 1000), 1000).collect().toSet
        val truth = Set(
            (0,422),(0,440),(0,922),(0,985),(1,484),(3,217),(3,224),(3,351),(3,493),(5,27),(5,47),(5,745),(5,750),(5,836),(6,477),(6,591),(6,666),(6,679),(6,749),(10,112),(10,319),(10,442),(10,627),(15,29),(15,323),(16,140),(16,306),(16,960),(17,18),(17,72),(17,157),(17,341),(17,823),(18,295),(18,552),(18,876),(18,896),(19,118),(19,807),(19,811),(21,73),(21,220),(21,681),(21,879),(24,267),(24,858),(24,968),(27,344),(29,441),(29,775),(30,165),(30,829),(39,477),(41,386),(46,14),(46,145),(46,296),(46,320),(46,342),(46,557),(46,645),(50,144),(51,162),(52,93),(52,478),(52,614),(52,787),(52,902),(52,963),(52,985),(65,682),(66,168),(66,393),(69,12),(69,390),(69,845),(69,875),(70,11),(70,557),(72,270),(72,299),(72,307),(72,530),(72,592),(72,781),(72,893),(72,995),(76,773),(76,980),(85,80),(85,120),(85,312),(85,528),(85,681),(85,840),(88,236),(89,642),(89,685),(89,756),(89,850),(94,34),(94,38),(94,177),(94,444),(94,619),(94,658),(94,774),(102,354),(103,78),(103,149),(103,173),(103,181),(103,831),(103,981),(104,20),(105,611),(110,56),(110,208),(110,434),(110,490),(110,642),(111,38),(112,212),(112,388),(112,447),(112,512),(112,838),(114,297),(114,335),(114,344),(114,589),(114,672),(115,156),(115,611),(115,668),(115,697),(115,929),(122,910),(123,399),(123,735),(132,23),(132,491),(132,496),(133,171),(133,389),(133,615),(133,616),(136,122),(140,606),(142,958),(144,655),(144,818),(147,212),(147,546),(149,399),(149,735),(149,761),(149,895),(150,798),(151,59),(151,607),(151,791),(151,818),(152,918),(154,187),(154,409),(154,696),(154,796),(154,826),(154,978),(155,338),(155,775),(155,868),(162,168),(162,237),(162,336),(162,598),(163,410),(163,505),(165,310),(165,378),(166,82),(166,148),(166,180),(166,371),(166,508),(166,641),(166,717),(166,765),(167,880),(168,503),(169,140),(169,306),(169,960),(170,115),(170,298),(170,396),(170,883),(170,909),(181,126),(181,215),(181,628),(184,645),(189,102),(189,780),(191,147),(191,256),(191,420),(191,448),(191,468),(191,923),(195,211),(195,537),(195,538),(195,599),(195,858),(195,933),(196,57),(196,520),(196,892),(199,804),(200,381),(200,401),(200,707),(200,936),(201,650),(201,797),(204,623),(204,856),(206,52),(206,175),(206,308),(206,402),(206,588),(206,752),(206,854),(210,707),(219,294),(219,413),(219,898),(226,966),(228,587),(229,82),(229,148),(229,180),(229,641),(230,205),(230,574),(231,58),(231,174),(231,195),(231,333),(231,441),(232,257),(232,673),(233,355),(233,477),(233,591),(233,666),(233,679),(233,749),(233,877),(236,86),(236,863),(237,105),(237,160),(237,431),(237,972),(238,530),(241,214),(241,358),(241,368),(241,507),(241,610),(241,646),(241,852),(241,898),(245,92),(245,702),(245,943),(246,191),(253,73),(253,220),(253,371),(253,485),(253,510),(253,521),(253,872),(253,933),(257,152),(257,683),(263,497),(263,687),(264,269),(265,559),(265,700),(265,728),(265,785),(268,798),(270,425),(270,528),(270,907),(271,244),(271,486),(271,532),(271,714),(271,847),(274,446),(274,625),(275,426),(275,689),(280,96),(280,198),(280,209),(280,222),(280,301),(280,365),(280,403),(280,417),(280,452),(280,516),(280,651),(280,656),(280,671),(280,676),(280,723),(280,771),(280,797),(280,878),(282,297),(282,335),(282,589),(282,672),(287,533),(287,578),(287,828),(289,13),(289,63),(289,119),(289,202),(289,269),(289,288),(289,302),(289,355),(289,397),(289,534),(289,653),(289,906),(289,982),(293,281),(293,572),(293,635),(293,689),(293,741),(294,426),(294,689),(297,332),(297,450),(297,713),(300,49),(300,83),(300,155),(300,362),(300,457),(300,580),(300,784),(300,860),(300,886),(305,641),(306,840),(307,22),(307,262),(307,536),(307,618),(307,739),(307,924),(307,951),(309,51),(309,239),(309,458),(309,470),(309,534),(309,663),(309,675),(309,722),(309,839),(309,869),(309,871),(310,373),(310,479),(310,545),(310,957),(311,399),(311,735),(312,110),(312,164),(312,234),(312,350),(312,433),(312,515),(312,551),(312,560),(312,911),(317,54),(317,70),(317,87),(317,100),(317,501),(317,530),(317,630),(317,808),(318,294),(318,775),(318,868),(318,898),(322,357),(322,659),(323,175),(323,588),(327,690),(327,761),(327,881),(327,895),(328,565),(328,825),(328,887),(340,216),(340,502),(340,837),(342,42),(342,679),(346,58),(346,195),(346,356),(346,566),(346,824),(350,29),(350,323),(351,95),(351,894),(352,41),(352,53),(352,421),(352,434),(352,461),(352,654),(353,208),(354,263),(354,414),(354,586),(358,102),(358,780),(362,33),(362,192),(362,245),(362,415),(365,33),(365,192),(365,245),(365,415),(367,18),(367,72),(367,157),(367,341),(367,823),(370,469),(372,196),(372,662),(376,84),(376,129),(376,628),(377,618),(378,156),(378,482),(378,563),(378,697),(378,740),(378,929),(381,391),(385,248),(385,260),(385,540),(385,554),(385,736),(385,747),(385,823),(387,154),(390,14),(390,145),(390,296),(390,320),(390,342),(390,557),(390,645),(391,66),(391,302),(391,632),(393,91),(393,899),(394,641),(400,536),(400,924),(405,90),(405,178),(405,185),(405,279),(405,526),(405,853),(408,291),(408,684),(408,810),(409,37),(409,324),(413,14),(413,296),(413,557),(413,645),(416,358),(416,420),(416,610),(416,646),(416,852),(416,947),(418,166),(418,740),(424,69),(424,117),(424,414),(429,263),(429,385),(429,414),(429,435),(429,665),(429,998),(431,275),(431,496),(437,146),(437,316),(441,965),(442,40),(442,964),(444,699),(446,143),(446,671),(446,760),(448,565),(448,825),(449,449),(449,816),(456,5),(456,593),(456,758),(456,897),(459,21),(459,399),(459,514),(459,531),(459,561),(459,597),(459,924),(459,927),(461,118),(461,807),(461,811),(465,152),(465,683),(466,135),(466,364),(466,492),(466,513),(466,629),(466,660),(466,681),(466,762),(466,879),(467,44),(468,141),(468,224),(468,282),(468,351),(468,493),(468,691),(468,692),(468,799),(470,217),(470,406),(470,715),(470,984),(471,343),(471,548),(473,603),(473,648),(473,795),(473,820),(474,474),(475,179),(475,203),(477,19),(477,94),(478,407),(479,636),(483,244),(483,486),(483,532),(483,714),(483,847),(485,266),(485,344),(485,404),(485,602),(485,642),(485,884),(485,944),(485,948),(487,411),(487,669),(488,238),(488,805),(493,86),(493,137),(493,863),(495,962),(498,67),(498,84),(498,129),(498,299),(498,628),(498,893),(499,161),(499,637),(499,649),(500,577),(500,969),(502,134),(502,592),(506,426),(506,689),(508,742),(510,9),(510,283),(510,744),(514,213),(514,228),(514,292),(514,363),(514,420),(514,519),(514,565),(514,725),(514,736),(514,825),(516,113),(516,207),(516,236),(516,243),(516,246),(516,280),(516,427),(516,454),(516,585),(516,639),(516,709),(516,827),(516,919),(516,970),(516,989),(519,162),(519,223),(519,276),(519,742),(523,89),(523,259),(523,368),(523,529),(523,633),(523,681),(523,851),(523,879),(528,38),(528,44),(531,210),(531,314),(531,499),(533,111),(533,124),(533,285),(536,15),(536,133),(536,389),(536,586),(536,968),(536,993),(537,833),(538,71),(538,105),(538,235),(538,431),(538,455),(538,819),(538,859),(538,997),(540,201),(540,303),(540,952),(540,986),(541,815),(541,930),(543,107),(543,513),(543,762),(544,24),(544,108),(544,288),(544,318),(544,579),(544,918),(553,312),(553,840),(554,23),(554,26),(554,190),(554,221),(554,253),(554,337),(554,496),(554,517),(554,583),(554,627),(559,245),(559,415),(559,975),(562,798),(562,805),(562,813),(562,966),(567,198),(567,403),(567,656),(569,201),(569,620),(569,740),(569,753),(569,826),(569,934),(569,981),(569,988),(570,104),(570,626),(570,793),(577,141),(577,453),(577,691),(577,692),(577,799),(578,518),(578,905),(580,146),(580,316),(583,76),(583,139),(583,182),(583,200),(583,304),(583,477),(583,483),(583,554),(583,597),(583,695),(583,755),(583,788),(583,954),(586,214),(590,41),(590,143),(590,145),(590,206),(590,286),(590,767),(590,932),(592,834),(600,146),(600,316),(601,653),(601,827),(601,958),(603,575),(605,604),(609,17),(609,68),(609,75),(609,119),(609,278),(609,355),(609,698),(609,877),(614,97),(614,194),(614,326),(614,487),(614,569),(614,609),(614,677),(614,776),(614,778),(614,800),(614,888),(614,991),(623,719),(625,74),(625,437),(625,556),(625,658),(625,729),(625,885),(628,372),(628,670),(631,849),(634,109),(634,189),(634,890),(634,966),(635,264),(635,917),(638,30),(638,266),(643,398),(644,596),(644,712),(647,974),(648,52),(648,308),(648,621),(648,854),(648,997),(650,324),(650,587),(650,665),(650,852),(653,108),(653,917),(653,976),(654,363),(654,678),(655,456),(655,925),(658,123),(658,751),(658,846),(659,252),(659,494),(662,383),(662,904),(675,226),(675,234),(675,424),(675,525),(675,605),(675,720),(675,842),(680,855),(680,917),(682,36),(682,674),(682,779),(685,391),(685,760),(688,251),(688,519),(688,543),(690,870),(694,775),(694,868),(696,8),(696,43),(697,55),(697,188),(697,270),(697,309),(697,420),(697,571),(697,592),(697,694),(697,710),(697,814),(702,41),(702,53),(702,421),(702,461),(705,101),(705,196),(705,662),(705,708),(705,734),(705,802),(706,264),(706,440),(706,917),(706,985),(708,125),(709,587),(709,665),(710,103),(710,186),(710,240),(710,355),(710,375),(710,821),(710,891),(710,901),(710,956),(710,967),(711,0),(711,96),(711,209),(711,222),(711,301),(711,417),(711,516),(711,523),(711,651),(711,671),(711,878),(712,212),(713,137),(715,812),(715,937),(716,419),(716,738),(716,887),(716,891),(717,624),(717,770),(718,167),(718,611),(721,528),(721,621),(721,907),(724,225),(724,465),(724,726),(726,205),(726,528),(726,907),(727,250),(727,349),(727,381),(727,464),(727,733),(727,812),(727,823),(727,937),(728,7),(731,178),(731,760),(734,48),(734,106),(734,429),(736,158),(736,166),(736,252),(736,494),(740,333),(744,30),(744,184),(744,640),(744,977),(745,489),(745,711),(745,832),(745,908),(746,307),(746,458),(746,999),(759,645),(761,382),(761,396),(761,667),(761,926),(761,975),(764,36),(764,46),(764,613),(764,779),(766,242),(766,361),(766,549),(766,921),(769,522),(769,539),(769,874),(769,963),(771,82),(771,131),(771,312),(771,968),(772,312),(772,866),(773,6),(773,299),(773,472),(773,622),(773,643),(773,764),(773,893),(776,536),(776,924),(786,227),(786,231),(786,310),(786,345),(786,360),(786,378),(786,462),(786,542),(787,219),(787,265),(787,266),(787,321),(787,404),(787,513),(787,653),(787,762),(787,884),(787,931),(787,944),(787,948),(788,249),(788,440),(788,457),(788,784),(788,985),(800,93),(800,331),(800,346),(800,376),(800,443),(800,463),(800,478),(800,614),(800,748),(800,902),(800,963),(803,166),(803,456),(803,925),(803,942),(804,287),(804,912),(806,23),(806,27),(806,47),(806,149),(806,496),(806,594),(806,745),(806,750),(806,836),(809,35),(809,809),(810,197),(810,393),(810,745),(810,843),(817,222),(817,555),(817,738),(821,2),(821,193),(821,412),(821,513),(831,589),(831,672),(836,704),(837,329),(838,148),(838,180),(839,254),(839,509),(840,889),(841,590),(841,987),(842,422),(842,922),(843,606),(845,641),(848,162),(851,58),(851,195),(851,229),(851,441),(854,141),(854,282),(854,299),(854,691),(854,692),(854,799),(854,893),(855,135),(863,57),(863,138),(863,169),(863,471),(863,520),(863,525),(863,547),(863,892),(863,945),(866,638),(867,96),(867,163),(867,439),(869,241),(869,309),(869,370),(869,395),(869,612),(869,694),(869,701),(869,857),(869,940),(870,875),(873,450),(873,663),(873,979),(874,905),(875,473),(875,864),(876,31),(876,397),(879,313),(879,542),(879,917),(880,317),(880,347),(883,383),(883,904),(886,565),(886,825),(888,398),(888,920),(890,833),(891,855),(891,917),(892,356),(895,16),(895,562),(895,830),(896,469),(898,446),(898,625),(900,42),(904,445),(904,777),(907,377),(907,495),(907,802),(907,953),(908,36),(908,46),(908,565),(908,613),(908,779),(908,825),(914,28),(914,96),(914,130),(914,553),(914,603),(914,648),(914,795),(914,820),(916,170),(916,593),(917,917),(918,98),(918,247),(918,255),(918,261),(918,385),(918,475),(918,527),(918,665),(918,928),(922,398),(922,915),(922,920),(922,959),(922,990),(923,172),(923,535),(923,748),(928,604),(934,803),(936,761),(936,895),(938,232),(940,79),(940,218),(941,387),(941,430),(942,44),(946,116),(946,460),(946,467),(946,703),(948,254),(948,369),(948,374),(949,645),(963,174),(963,333),(970,107),(970,438),(970,513),(970,762),(970,862),(974,10),(974,128),(977,297),(977,335),(977,589),(977,672),(978,410),(978,423),(978,505),(980,541),(980,567),(982,693),(984,514),(984,531),(984,561),(984,924),(984,927),(986,85),(986,159),(986,264),(986,325),(986,566),(986,634),(986,917),(989,153),(989,186),(989,621),(989,700),(989,724),(989,790),(989,821),(989,956),(992,205),(992,801),(992,840),(996,55),(996,441),(996,476),(996,534),(996,571),(996,730),(996,751),(996,846),(996,941),(996,942),(999,249),(999,440),(999,985)
        )
        assert(truth.equals(ans))
    }

    //test 9
    test("Correct 4-hop neighbors for a graph of size 1000 (2)") {
        val datafile = "src/test/resources/random2.csv"
        val graph = FourHops.loadData(spark, datafile)
        val ans = FourHops.matrixMultiply(FourHops.matrixMultiply(graph, 1000), 1000).collect().toSet
        val truth = Set(
            (3,184),(3,521),(3,901),(4,69),(4,117),(4,426),(4,932),(11,187),(11,246),(13,201),(13,356),(13,644),(14,67),(14,323),(14,436),(14,707),(15,370),(15,770),(15,953),(16,93),(16,321),(16,566),(16,782),(18,213),(18,405),(18,674),(22,235),(22,357),(22,392),(23,451),(24,111),(24,188),(24,756),(25,723),(25,845),(28,242),(28,312),(28,446),(28,507),(28,512),(28,669),(28,905),(28,937),(33,106),(33,185),(33,604),(33,718),(33,778),(38,452),(38,993),(39,39),(39,284),(40,39),(40,908),(44,120),(44,150),(44,696),(44,822),(44,861),(46,425),(49,347),(49,712),(49,743),(55,175),(56,2),(56,200),(57,564),(57,600),(63,444),(63,580),(74,70),(74,223),(74,277),(74,601),(74,847),(77,131),(79,137),(79,336),(79,339),(80,567),(80,936),(82,86),(82,117),(82,950),(85,286),(87,45),(87,60),(87,337),(91,194),(91,229),(92,99),(92,915),(93,641),(94,173),(94,510),(94,595),(94,741),(100,605),(107,694),(108,785),(113,84),(113,130),(113,503),(113,944),(116,58),(116,142),(116,260),(116,276),(116,379),(116,593),(116,619),(116,787),(118,237),(118,255),(118,744),(118,747),(119,498),(119,565),(119,594),(119,816),(121,47),(121,303),(121,858),(121,895),(121,999),(122,233),(122,239),(122,265),(122,992),(128,162),(128,555),(131,71),(131,209),(131,888),(133,534),(133,609),(133,789),(139,243),(139,381),(139,663),(140,21),(140,37),(140,360),(141,386),(141,414),(141,740),(141,878),(144,38),(144,68),(144,219),(144,288),(144,320),(144,487),(144,754),(145,872),(145,998),(146,445),(156,275),(156,635),(159,702),(159,714),(166,6),(166,25),(166,172),(169,18),(169,81),(169,534),(169,609),(169,789),(174,41),(174,151),(174,852),(174,989),(178,289),(178,322),(178,343),(178,625),(178,835),(178,959),(181,338),(181,366),(186,82),(186,283),(186,401),(186,569),(186,680),(187,152),(187,576),(187,628),(187,786),(193,709),(193,726),(197,109),(197,750),(198,194),(200,445),(200,899),(203,311),(203,705),(206,190),(206,639),(206,643),(206,645),(206,684),(206,685),(207,205),(207,394),(208,98),(208,114),(208,210),(208,301),(208,384),(208,660),(208,706),(208,813),(208,881),(208,883),(208,987),(209,683),(211,368),(213,34),(213,92),(213,486),(213,611),(213,929),(213,946),(217,935),(220,514),(220,532),(220,574),(224,851),(237,515),(238,326),(238,608),(238,687),(238,917),(242,879),(254,467),(254,817),(256,238),(256,456),(256,781),(258,129),(258,513),(258,572),(258,662),(258,704),(261,526),(262,400),(263,177),(263,226),(263,290),(263,616),(264,427),(264,988),(265,314),(265,420),(266,0),(266,208),(266,266),(266,388),(266,471),(266,494),(266,539),(266,551),(266,587),(266,622),(266,742),(268,329),(268,798),(268,819),(270,51),(270,123),(270,666),(270,719),(270,731),(270,934),(271,66),(273,396),(273,406),(273,607),(273,729),(273,912),(276,257),(276,488),(276,535),(277,157),(277,331),(277,493),(279,820),(282,690),(286,39),(286,284),(286,670),(291,139),(294,417),(295,186),(295,335),(295,668),(295,795),(301,552),(301,886),(301,964),(302,214),(307,372),(307,715),(307,728),(313,189),(313,776),(313,802),(313,980),(316,650),(325,147),(327,56),(327,739),(332,79),(332,385),(332,806),(339,102),(339,880),(342,5),(342,359),(344,617),(349,986),(351,166),(351,178),(351,193),(351,232),(351,377),(351,404),(351,563),(351,963),(352,402),(352,413),(352,657),(352,853),(355,431),(355,651),(355,737),(357,540),(364,259),(364,821),(366,988),(375,61),(378,149),(378,183),(378,315),(378,410),(378,542),(378,570),(381,499),(381,759),(382,668),(382,812),(384,49),(384,738),(385,397),(385,597),(390,145),(390,196),(390,501),(390,642),(390,727),(390,766),(390,981),(392,367),(392,602),(392,655),(392,686),(392,699),(399,465),(399,491),(399,653),(399,961),(400,364),(400,670),(400,751),(400,900),(406,28),(406,827),(408,351),(408,700),(408,780),(411,293),(411,698),(412,539),(412,550),(412,661),(415,32),(415,533),(415,841),(416,3),(416,479),(416,577),(416,731),(416,969),(417,51),(419,136),(419,164),(419,256),(424,218),(424,845),(424,955),(431,175),(432,458),(434,432),(434,469),(434,974),(435,560),(438,113),(438,279),(438,302),(438,349),(438,378),(438,768),(440,112),(446,839),(447,678),(454,966),(455,51),(455,791),(455,919),(466,671),(470,217),(470,733),(480,583),(481,489),(481,623),(481,752),(482,246),(482,760),(492,979),(501,26),(501,176),(501,252),(501,735),(506,161),(506,230),(506,375),(506,502),(506,757),(506,864),(515,80),(515,154),(515,299),(515,442),(515,520),(515,548),(515,868),(515,958),(519,614),(520,849),(520,968),(524,882),(526,119),(526,160),(526,461),(526,525),(526,654),(526,783),(526,954),(529,100),(529,103),(529,134),(529,258),(529,307),(529,338),(529,366),(529,421),(529,818),(531,96),(531,138),(531,399),(531,484),(531,485),(531,606),(531,648),(531,967),(531,985),(534,236),(534,274),(534,318),(534,679),(540,170),(540,906),(542,135),(542,541),(542,599),(542,641),(542,956),(543,746),(544,807),(544,855),(547,148),(547,204),(547,291),(549,317),(551,22),(551,206),(551,374),(551,859),(552,171),(552,661),(555,549),(557,287),(557,474),(557,524),(557,788),(557,794),(570,97),(570,198),(570,598),(570,995),(575,448),(575,592),(575,665),(576,296),(576,530),(576,696),(576,730),(576,822),(587,264),(587,889),(594,40),(594,127),(594,248),(594,546),(594,621),(595,940),(596,10),(596,64),(596,90),(596,545),(596,753),(596,877),(600,77),(601,613),(601,717),(609,4),(609,837),(613,422),(613,695),(613,892),(614,58),(614,260),(614,276),(614,379),(614,562),(614,593),(614,801),(614,848),(617,473),(617,618),(617,814),(617,865),(622,222),(622,269),(622,455),(622,710),(627,649),(631,42),(631,101),(631,331),(631,450),(631,455),(631,497),(631,710),(631,836),(631,911),(633,153),(633,867),(633,928),(634,253),(634,352),(634,441),(634,480),(634,544),(634,582),(636,264),(638,13),(638,826),(638,949),(645,310),(645,341),(645,389),(645,647),(645,973),(649,27),(649,395),(649,578),(649,960),(650,9),(650,273),(650,281),(650,285),(650,430),(653,247),(653,824),(662,220),(664,138),(664,485),(664,606),(666,844),(667,63),(667,250),(667,885),(667,990),(672,24),(672,88),(672,234),(672,466),(672,586),(672,991),(674,159),(674,691),(674,799),(680,228),(683,342),(686,522),(688,125),(690,757),(694,54),(698,105),(698,825),(700,423),(700,673),(700,721),(704,7),(704,554),(704,986),(708,419),(709,278),(709,682),(709,811),(709,971),(713,1),(713,492),(713,757),(716,978),(725,139),(734,918),(745,20),(745,240),(745,369),(745,697),(745,951),(747,85),(747,382),(748,755),(749,19),(749,115),(752,761),(752,773),(755,168),(755,221),(755,643),(755,645),(755,684),(755,745),(755,783),(757,830),(759,975),(762,249),(762,325),(762,482),(762,636),(762,819),(766,505),(766,692),(770,16),(770,73),(770,74),(770,280),(770,516),(770,884),(770,978),(773,567),(773,936),(774,244),(774,693),(776,71),(776,209),(776,888),(781,35),(781,203),(781,596),(781,675),(781,725),(781,907),(785,27),(785,33),(785,43),(785,212),(785,251),(785,354),(785,395),(785,578),(785,585),(786,438),(790,181),(790,898),(790,931),(793,408),(793,793),(793,808),(793,829),(793,846),(793,902),(793,957),(793,976),(794,531),(794,631),(794,922),(800,500),(800,939),(801,143),(807,918),(809,371),(809,688),(816,23),(816,121),(816,180),(816,182),(816,313),(816,415),(816,896),(819,659),(820,298),(820,610),(820,620),(820,920),(820,996),(827,464),(828,547),(828,832),(831,194),(831,268),(831,411),(834,12),(834,383),(834,506),(834,831),(837,762),(837,925),(846,722),(846,820),(848,308),(850,254),(850,341),(850,389),(851,178),(851,306),(851,763),(851,856),(851,890),(856,29),(856,46),(856,340),(856,527),(857,94),(857,207),(858,772),(859,459),(864,253),(864,629),(866,108),(866,215),(866,324),(866,363),(866,687),(866,716),(866,774),(866,796),(866,862),(866,875),(866,977),(866,984),(867,201),(867,267),(867,319),(867,356),(867,538),(867,652),(867,713),(867,805),(867,994),(868,590),(869,508),(869,557),(872,112),(872,833),(874,270),(874,638),(874,777),(875,44),(875,626),(875,784),(876,914),(877,365),(880,128),(880,916),(883,34),(883,75),(883,92),(883,486),(883,929),(883,946),(891,433),(891,518),(891,632),(891,957),(894,144),(894,376),(894,462),(894,923),(897,407),(899,612),(902,116),(902,344),(902,463),(902,470),(902,511),(902,664),(904,517),(904,681),(905,128),(905,916),(907,124),(907,840),(909,167),(909,942),(910,323),(910,589),(910,758),(910,903),(910,924),(910,941),(912,472),(912,536),(912,624),(912,627),(914,913),(917,62),(917,960),(925,373),(925,390),(925,658),(926,873),(928,48),(928,89),(928,190),(928,211),(928,245),(928,634),(928,947),(930,271),(930,528),(930,703),(933,575),(933,701),(933,767),(933,775),(934,361),(936,809),(943,476),(948,263),(948,558),(948,559),(949,110),(949,453),(949,749),(951,17),(951,689),(951,863),(956,31),(956,36),(956,195),(956,385),(956,393),(956,603),(956,970),(958,475),(958,893),(959,646),(960,960),(961,103),(962,457),(966,62),(966,591),(966,876),(967,297),(967,355),(967,361),(967,637),(967,765),(967,887),(968,815),(969,38),(969,633),(969,904),(972,477),(972,529),(972,769),(972,842),(975,348),(976,581),(976,656),(976,713),(977,118),(977,391),(977,418),(977,997),(978,610),(978,920),(978,996),(985,95),(989,50),(989,474),(989,495),(989,711),(989,788),(989,803),(989,843)
        )
        assert(truth.equals(ans))
    }

    //test 10
    test("Correct 4-hop neighbors for a graph of size 1000 (3)") {
        val datafile = "src/test/resources/random3.csv"
        val graph = FourHops.loadData(spark, datafile)
        val ans = FourHops.matrixMultiply(FourHops.matrixMultiply(graph, 1000), 1000).collect().toSet
        val truth = Set(
            (246,356),(246,391),(297,858),(554,736),(818,662)
        )
        assert(truth.equals(ans))
    }

    //test 11
    test("Correct 4-hop neighbors for a graph of size 1000 (4)") {
        val datafile = "src/test/resources/random4.csv"
        val graph = FourHops.loadData(spark, datafile)
        val ans = FourHops.matrixMultiply(FourHops.matrixMultiply(graph, 1000), 1000).collect().toSet
        val truth = Set(

        )
        assert(truth.equals(ans))
    }

    //test 12
    test("Test graph 1") {
        val datafile = "src/test/resources/graph1.csv"
        val graph = FourHops.loadData(spark, datafile)
        val ans = FourHops.matrixMultiply(graph, 1000).collect().toSet
        val truth = Set((8,29),(602,548),(46,783),(364,924),(444,374),(827,144),(841,692),(988,119))
        assert(truth.equals(ans))
    }

    //test 13
    test("Test graph 2") {
        val datafile = "src/test/resources/graph2.csv"
        val graph = FourHops.loadData(spark, datafile)
        val ans = FourHops.matrixMultiply(FourHops.matrixMultiply(graph, 1000), 1000).collect().toSet
        val truth = Set((279,279), (766,766), (36,546),(38,362),(43,527),(43,761),(71,993),(48,492),(75,72),(875,402),(86,231),(86,539),(129,708),(150,402),(157,567),(157,64),(271,463),(227,536),(227,337),(239,536),(239,337),(313,933),(313,705),(295,905),(295,273),(825,752),(322,546),(328,597),(676,756),(340,756),(500,72),(371,656),(371,154),(678,538),(423,619),(423,795),(448,344),(448,688),(494,597),(498,438),(504,364),(504,208),(504,967),(744,686),(517,231),(517,539),(520,597),(544,231),(544,539),(550,972),(550,395),(550,900),(560,362),(567,751),(567,375),(570,708),(633,875),(667,416),(745,72),(693,756),(731,751),(731,375),(732,993),(747,865),(747,632),(917,873),(957,751),(957,375),(958,643),(960,277),(963,751),(963,375),(964,218),(964,500),(979,402),(995,477),(995,698))
        assert(truth.equals(ans))
    }

    //test 14
    test("Test graph 3") {
        val datafile = "src/test/resources/graph3.csv"
        val graph = FourHops.loadData(spark, datafile)
        val ans = FourHops.matrixMultiply(FourHops.matrixMultiply(graph, 1000), 1000).collect().toSet
        val truth = Set((3,929),(27,66),(27,84),(27,172),(352,971),(472,470),(118,322),(145,390),(393,588),(167,588),(255,720),(263,964),(268,151),(268,505),(942,905),(328,463),(328,59),(346,720),(355,680),(355,44),(396,490),(360,711),(387,938),(387,564),(408,627),(469,25),(469,616),(469,599),(480,905),(518,782),(546,78),(952,625),(608,938),(608,564),(672,368),(726,624),(921,502),(817,78),(826,151),(826,505),(829,505),(865,207),(909,90),(920,905))
        assert(truth.equals(ans))
    }

    //test 15
    test("Test graph 4") {
        val datafile = "src/test/resources/graph4.csv"
        val graph = FourHops.loadData(spark, datafile)
        val ans = FourHops.matrixMultiply(FourHops.matrixMultiply(FourHops.matrixMultiply(FourHops.matrixMultiply(graph, 1000), 1000), 1000), 1000).collect().toSet
        val truth = Set((554,590))
        assert(truth.equals(ans))
    }

    //test 16
    test("Test graph 5") {
        val datafile = "src/test/resources/graph5.csv"
        val graph = FourHops.loadData(spark, datafile)
        val ans = FourHops.matrixMultiply(graph, 1000).collect().toSet
        val truth = Set()
        assert(truth.equals(ans))
    }
}